.TH "UI::ImageItemWidget" 3 "Sat May 10 2014" "Version 0.1" "AWE Media Center" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UI::ImageItemWidget \- 
.PP
A \fCQListWidgetItem\fP that holds an image\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ImageItemWidget\&.h>\fP
.PP
Inherits \fBUI::ItemWidget\fP\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "virtual void \fBsetImage\fP (QDir file)"
.br
.RI "\fISets the image held by this widget\&. \fP"
.ti -1c
.RI "virtual void \fBsetImage\fP (QPixmap image)"
.br
.RI "\fISets the image held by this widget\&. \fP"
.ti -1c
.RI "virtual void \fBsetIndex\fP (int index)"
.br
.RI "\fISet the index for the image\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBImageItemWidget\fP (QWidget *parent, int index, QDir file, bool highlightable=false, QSize size=QSize(-1,-1))"
.br
.RI "\fIMake with the given image file\&. \fP"
.ti -1c
.RI "\fBImageItemWidget\fP (QWidget *parent, int index, QPixmap image, bool highlightable=false, QSize size=QSize(-1,-1))"
.br
.RI "\fIMake with the given image\&. \fP"
.ti -1c
.RI "virtual bool \fBfixSizeToFitIn\fP (QSize size)"
.br
.RI "\fIFix this item's size to fit in the given size\&. \fP"
.ti -1c
.RI "virtual QSize \fBgetSizeToFitIn\fP () const "
.br
.RI "\fIGet the size this item has to fit in\&. \fP"
.ti -1c
.RI "virtual int \fBheightForWidth\fP (int w) const "
.br
.RI "\fIReturns the recommended height for the given width\&. \fP"
.ti -1c
.RI "virtual void \fBsetAspectRatioMode\fP (Qt::AspectRatioMode mode)"
.br
.RI "\fISet the aspect ratio mode used to scale the pixmap\&. \fP"
.ti -1c
.RI "virtual Qt::AspectRatioMode \fBgetAspectRatioMode\fP () const "
.br
.RI "\fIGet the aspect ratio mode used to scale the pixmap\&. \fP"
.ti -1c
.RI "virtual QString \fBgetItemType\fP () const "
.br
.RI "\fIGet the type of this item, 'Image Item'\&. \fP"
.ti -1c
.RI "virtual QPixmap \fBgetImage\fP () const "
.br
.RI "\fIGet the image held by this widget\&. \fP"
.ti -1c
.RI "virtual int \fBgetIndex\fP () const "
.br
.RI "\fIGet the index for the image\&. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBpaintEvent\fP (QPaintEvent *event)"
.br
.RI "\fIPaints this widget\&. \fP"
.ti -1c
.RI "virtual void \fBresizeEvent\fP (QResizeEvent *event)"
.br
.RI "\fIResizes the icon if necessary\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBmakeImageIcon\fP (QSize size)"
.br
.RI "\fIHelper function that scales the image\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBmyIndex\fP"
.br
.RI "\fIThe index of this file in the item's config file\&. \fP"
.ti -1c
.RI "QPixmap \fBmyImage\fP"
.br
.RI "\fIThe image object (in full size)\&. \fP"
.ti -1c
.RI "QPixmap \fBmyIconImage\fP"
.br
.RI "\fIThe icon object (scaled down)\&. \fP"
.ti -1c
.RI "Qt::AspectRatioMode \fBmyRatioMode\fP"
.br
.RI "\fIThe aspect ratio mode\&. \fP"
.ti -1c
.RI "QSize \fBmyFitInSize\fP"
.br
.RI "\fIThe target icon size\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A \fCQListWidgetItem\fP that holds an image\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ImageItemWidget::ImageItemWidget (QWidget *parent, intindex, QDirfile, boolhighlightable = \fCfalse\fP, QSizesize = \fCQSize(-1, -1)\fP)"

.PP
Make with the given image file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP The parent widget\&. 
.br
\fIfile\fP The image file to open\&. 
.br
\fIhighlightable\fP \fCtrue\fP if this widget can be highlighted and selected, \fCfalse\fP if not\&. 
.br
\fIsize\fP The width and height of the image\&. 
.RE
.PP

.SS "ImageItemWidget::ImageItemWidget (QWidget *parent, intindex, QPixmapimage, boolhighlightable = \fCfalse\fP, QSizesize = \fCQSize(-1, -1)\fP)"

.PP
Make with the given image\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP The parent widget\&. 
.br
\fIfile\fP The image file to open\&. 
.br
\fIhighlightable\fP \fCtrue\fP if this widget can be highlighted and selected, \fCfalse\fP if not\&. 
.br
\fIsize\fP The width and height of the image\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool ImageItemWidget::fixSizeToFitIn (QSizesize)\fC [virtual]\fP"

.PP
Fix this item's size to fit in the given size\&. If \fCsize == QSize(-1, -1)\fP, the item should not fix its size\&.
.PP
This is mostly used by \fC\fBItemCollectionWidget\fP\fPs to make sure that the item does not get swallowed up by the spacers used to align the items\&.
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP The size to fit inside\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCtrue\fP if this item can fit in \fCsize\fP, \fCfalse\fP if it cannot\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "Qt::AspectRatioMode ImageItemWidget::getAspectRatioMode () const\fC [virtual]\fP"

.PP
Get the aspect ratio mode used to scale the pixmap\&. By default, this is set to \fCQt::KeepAspectRatio\fP\&.
.PP
\fBReturns:\fP
.RS 4
The aspect ratio mode used to scale the image\&. 
.RE
.PP

.SS "QPixmap ImageItemWidget::getImage () const\fC [virtual]\fP"

.PP
Get the image held by this widget\&. 
.PP
\fBReturns:\fP
.RS 4
The image held by this widget\&. 
.RE
.PP

.SS "int ImageItemWidget::getIndex () const\fC [virtual]\fP"

.PP
Get the index for the image\&. 
.PP
\fBReturns:\fP
.RS 4
The index for the image\&. 
.RE
.PP

.SS "QString ImageItemWidget::getItemType () const\fC [virtual]\fP"

.PP
Get the type of this item, 'Image Item'\&. 
.PP
\fBReturns:\fP
.RS 4
'Image Item'\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "QSize ImageItemWidget::getSizeToFitIn () const\fC [virtual]\fP"

.PP
Get the size this item has to fit in\&. This is the size set by \fC\fBfixSizeToFitIn()\fP\fP\&.
.PP
\fBReturns:\fP
.RS 4
The size this item has to fit in\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "int ImageItemWidget::heightForWidth (intw) const\fC [virtual]\fP"

.PP
Returns the recommended height for the given width\&. 
.PP
\fBParameters:\fP
.RS 4
\fIw\fP The width to use\&.
.RE
.PP
\fBReturns:\fP
.RS 4
The recommended height for a widget with width \fCw\fP\&. 
.RE
.PP

.SS "void ImageItemWidget::makeImageIcon (QSizesize)\fC [private]\fP"

.PP
Helper function that scales the image\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP The size to scale to\&. 
.RE
.PP

.SS "void ImageItemWidget::paintEvent (QPaintEvent *event)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Paints this widget\&. 
.PP
\fBParameters:\fP
.RS 4
\fIevent\fP The paint event (ignored)\&. 
.RE
.PP

.PP
Reimplemented from \fBUI::ItemWidget\fP\&.
.SS "void ImageItemWidget::resizeEvent (QResizeEvent *event)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Resizes the icon if necessary\&. 
.PP
\fBParameters:\fP
.RS 4
\fIevent\fP The resize event (ignored)\&. 
.RE
.PP

.SS "void ImageItemWidget::setAspectRatioMode (Qt::AspectRatioModemode)\fC [virtual]\fP"

.PP
Set the aspect ratio mode used to scale the pixmap\&. 
.PP
\fBParameters:\fP
.RS 4
\fImode\fP The new aspect ratio mode\&. 
.RE
.PP

.SS "void ImageItemWidget::setImage (QDirfile)\fC [virtual]\fP, \fC [slot]\fP"

.PP
Sets the image held by this widget\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfile\fP The file holding the image\&. 
.RE
.PP

.SS "void ImageItemWidget::setImage (QPixmapimage)\fC [virtual]\fP, \fC [slot]\fP"

.PP
Sets the image held by this widget\&. 
.PP
\fBParameters:\fP
.RS 4
\fIimage\fP The new image\&. 
.RE
.PP

.SS "void ImageItemWidget::setIndex (intindex)\fC [virtual]\fP, \fC [slot]\fP"

.PP
Set the index for the image\&. 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP The index for the image\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for AWE Media Center from the source code\&.
