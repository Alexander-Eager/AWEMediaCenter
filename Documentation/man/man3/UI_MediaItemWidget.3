.TH "UI::MediaItemWidget" 3 "Sat May 10 2014" "Version 0.1" "AWE Media Center" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UI::MediaItemWidget \- 
.PP
A list widget class that holds a media item\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <MediaItemWidget\&.h>\fP
.PP
Inherits \fBUI::ItemWidget\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBDisplayMode\fP { \fBNameOnly\fP, \fBIconOnly\fP, \fBNameAndIconLeftToRight\fP, \fBNameAndIconTopToBottom\fP }"
.br
.RI "\fIValues describing the display modes for this widget\&. \fP"
.in -1c
.SS "Public Slots"

.in +1c
.ti -1c
.RI "virtual void \fBsetMediaItem\fP (\fBAWE::MediaItem\fP *item)"
.br
.RI "\fIChange the media item\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMediaItemWidget\fP (QWidget *parent, \fBAWE::MediaItem\fP *item, bool highlightable=false)"
.br
.RI "\fIConstruct for the given media item\&. \fP"
.ti -1c
.RI "virtual bool \fBfixSizeToFitIn\fP (QSize size)"
.br
.RI "\fIFix this item's size to fit in the given size\&. \fP"
.ti -1c
.RI "virtual QSize \fBgetSizeToFitIn\fP () const "
.br
.RI "\fIGet the size this item has to fit in\&. \fP"
.ti -1c
.RI "virtual QString \fBgetItemType\fP () const "
.br
.RI "\fIGet the item type, 'Media Item'\&. \fP"
.ti -1c
.RI "virtual void \fBsetDisplayMode\fP (\fBDisplayMode\fP mode)"
.br
.RI "\fISet the display mode for this widget\&. \fP"
.ti -1c
.RI "virtual \fBDisplayMode\fP \fBgetDisplayMode\fP () const "
.br
.RI "\fIGet the display mode for this widget\&. \fP"
.ti -1c
.RI "virtual \fBAWE::MediaItem\fP * \fBgetMediaItem\fP () const "
.br
.RI "\fIGets the media item represented by this widget\&. \fP"
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBrespondToClick\fP ()"
.br
.RI "\fIPropogate click events for the sub-widgets to this widget\&. \fP"
.ti -1c
.RI "void \fBrespondToDoubleClick\fP ()"
.br
.RI "\fIPropogate double-click events for the sub-widgets to this widget\&. \fP"
.ti -1c
.RI "void \fBrespondToIconChange\fP (int index)"
.br
.RI "\fIChange the displayed icon when the default icon is changed\&. \fP"
.ti -1c
.RI "void \fBrespondToNameChange\fP (QString name)"
.br
.RI "\fIChange the displayed text when the name is changed\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBenactDisplayMode\fP ()"
.br
.RI "\fIHelper function to switch display modes\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBAWE::MediaItem\fP * \fBmyMediaItem\fP"
.br
.RI "\fIThe media item\&. \fP"
.ti -1c
.RI "\fBDisplayMode\fP \fBmyDisplayMode\fP"
.br
.RI "\fIThe display mode\&. \fP"
.ti -1c
.RI "QBoxLayout * \fBmyLayout\fP"
.br
.RI "\fIThe layout for the name and icon\&. \fP"
.ti -1c
.RI "\fBTextItemWidget\fP * \fBmyName\fP"
.br
.RI "\fIThe name of the item\&. \fP"
.ti -1c
.RI "\fBImageItemWidget\fP * \fBmyIcon\fP"
.br
.RI "\fIThe icon of the item\&. \fP"
.ti -1c
.RI "QSize \fBmyFitInSize\fP"
.br
.RI "\fIThe size to fit in\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A list widget class that holds a media item\&. 

This can be displayed as the name of the item, its default icon, or both\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "MediaItemWidget::MediaItemWidget (QWidget *parent, \fBAWE::MediaItem\fP *item, boolhighlightable = \fCfalse\fP)"

.PP
Construct for the given media item\&. By default, this is displayed as the name of the file\&.
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP The parent widget\&. 
.br
\fIitem\fP The media item this widget represents\&. 
.br
\fIhighlightable\fP \fCtrue\fP if this widget can be highlighted and selected, \fCfalse\fP if not\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool MediaItemWidget::fixSizeToFitIn (QSizesize)\fC [virtual]\fP"

.PP
Fix this item's size to fit in the given size\&. If \fCsize == QSize(-1, -1)\fP, the item should not fix its size\&.
.PP
This is mostly used by \fC\fBItemCollectionWidget\fP\fPs to make sure that the item does not get swallowed up by the spacers used to align the items\&.
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP The size to fit inside\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fCtrue\fP if this item can fit in \fCsize\fP, \fCfalse\fP if it cannot\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "\fBMediaItemWidget::DisplayMode\fP MediaItemWidget::getDisplayMode () const\fC [virtual]\fP"

.PP
Get the display mode for this widget\&. 
.PP
\fBReturns:\fP
.RS 4
The display mode for this widget\&. 
.RE
.PP

.SS "QString MediaItemWidget::getItemType () const\fC [virtual]\fP"

.PP
Get the item type, 'Media Item'\&. 
.PP
\fBReturns:\fP
.RS 4
'Media Item'\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "\fBMediaItem\fP * MediaItemWidget::getMediaItem () const\fC [virtual]\fP"

.PP
Gets the media item represented by this widget\&. 
.PP
\fBReturns:\fP
.RS 4
The media item represented by this widget\&. 
.RE
.PP

.SS "QSize MediaItemWidget::getSizeToFitIn () const\fC [virtual]\fP"

.PP
Get the size this item has to fit in\&. This is the size set by \fC\fBfixSizeToFitIn()\fP\fP\&.
.PP
\fBReturns:\fP
.RS 4
The size this item has to fit in\&. 
.RE
.PP

.PP
Implements \fBUI::ItemWidget\fP\&.
.SS "void MediaItemWidget::respondToIconChange (intindex)\fC [private]\fP, \fC [slot]\fP"

.PP
Change the displayed icon when the default icon is changed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP The index of the new default icon\&. 
.RE
.PP

.SS "void MediaItemWidget::respondToNameChange (QStringname)\fC [private]\fP, \fC [slot]\fP"

.PP
Change the displayed text when the name is changed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP The new name to display\&. 
.RE
.PP

.SS "void MediaItemWidget::setDisplayMode (\fBDisplayMode\fPmode)\fC [virtual]\fP"

.PP
Set the display mode for this widget\&. This can be any of the values from \fC\fBMediaItemWidget::DisplayMode\fP\fP:
.IP "\(bu" 2
\fCNameOnly\fP: display the name as text\&.
.IP "\(bu" 2
\fCIconOnly\fP: display the default icon image\&.
.IP "\(bu" 2
\fCNameAndIconLeftToRight\fP: display both the name and the default icon image, icon on left\&.
.IP "\(bu" 2
\fCNameAndIconTopToBottom\fP: display both the name and the default icon image, icon on top\&.
.PP
.PP
\fBParameters:\fP
.RS 4
\fImode\fP The display mode to use\&. 
.RE
.PP

.SS "void MediaItemWidget::setMediaItem (\fBAWE::MediaItem\fP *item)\fC [virtual]\fP, \fC [slot]\fP"

.PP
Change the media item\&. 
.PP
\fBParameters:\fP
.RS 4
\fIitem\fP The new media item\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for AWE Media Center from the source code\&.
